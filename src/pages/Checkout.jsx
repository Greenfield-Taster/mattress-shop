import { useState, useContext } from "react";
import { Link } from "react-router-dom";
import { CartContext } from "../contexts/CartContext";
import { AuthContext } from "../contexts/AuthContext";
import "../styles/pages/Checkout.scss";

// Import icons (lucide-react)
import {
  User,
  Phone,
  Mail,
  MapPin,
  CreditCard,
  Truck,
  Package,
  Clock,
  CheckCircle,
  ChevronDown,
  HelpCircle,
} from "lucide-react";

const Checkout = () => {
  const { items, totals, currency } = useContext(CartContext);
  const { user } = useContext(AuthContext);

  // Contact form state
  const [contactData, setContactData] = useState({
    fullName: user?.name || "",
    phone: "",
    email: user?.email || "",
    comment: "",
    createAccount: false,
  });

  // Delivery state
  const [deliveryMethod, setDeliveryMethod] = useState("");
  const [deliveryCity, setDeliveryCity] = useState("");
  const [deliveryAddress, setDeliveryAddress] = useState("");
  const [deliveryWarehouse, setDeliveryWarehouse] = useState("");
  const [saveDeliveryInfo, setSaveDeliveryInfo] = useState(false);

  // Payment state
  const [paymentMethod, setPaymentMethod] = useState("");
  const [agreeToTerms, setAgreeToTerms] = useState(false);

  // Delivery options
  const deliveryOptions = [
    {
      id: "nova-poshta",
      name: "–ù–æ–≤–∞ –ü–æ—à—Ç–∞",
      subtitle: "–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è / –ü–æ—à—Ç–æ–º–∞—Ç",
      icon: "üì¶",
    },
    {
      id: "meest",
      name: "Meest",
      subtitle: "–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è / –ö—É—Ä'—î—Ä",
      icon: "üìÆ",
    },
    {
      id: "delivery",
      name: "Delivery",
      subtitle: "–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è / –ö—É—Ä'—î—Ä",
      icon: "üöö",
    },
    {
      id: "intime",
      name: "InTime",
      subtitle: "–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è / –ö—É—Ä'—î—Ä",
      icon: "‚è±Ô∏è",
    },
    {
      id: "courier",
      name: "–ö—É—Ä'—î—Ä",
      subtitle: "–ê–¥—Ä–µ—Å–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞",
      icon: "üö¥",
    },
    {
      id: "pickup",
      name: "–°–∞–º–æ–≤–∏–≤—ñ–∑",
      subtitle: "–ó—ñ —Å–∫–ª–∞–¥—É / –º–∞–≥–∞–∑–∏–Ω—É",
      icon: "üè™",
    },
  ];

  // Payment options
  const paymentOptions = [
    {
      id: "cash-on-delivery",
      name: "–û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ",
      subtitle: "–ì–æ—Ç—ñ–≤–∫–∞ / –∫–∞—Ä—Ç–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ",
      icon: "üíµ",
    },
    {
      id: "card-online",
      name: "–ö–∞—Ä—Ç–∫–∞ –æ–Ω–ª–∞–π–Ω",
      subtitle: "Visa / MasterCard",
      icon: "üí≥",
    },
    {
      id: "google-apple-pay",
      name: "Google Pay / Apple Pay",
      subtitle: "–®–≤–∏–¥–∫–∞ –æ–ø–ª–∞—Ç–∞",
      icon: "üì±",
    },
    {
      id: "invoice",
      name: "–ë–µ–∑–≥–æ—Ç—ñ–≤–∫–æ–≤–∏–π —Ä–∞—Ö—É–Ω–æ–∫",
      subtitle: "–î–ª—è —é—Ä. –æ—Å—ñ–±",
      icon: "üßæ",
    },
  ];

  const handleContactChange = (e) => {
    const { name, value, type, checked } = e.target;
    setContactData((prev) => ({
      ...prev,
      [name]: type === "checkbox" ? checked : value,
    }));
  };

  const handleSubmitOrder = (e) => {
    e.preventDefault();

    if (!deliveryMethod) {
      alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –¥–æ—Å—Ç–∞–≤–∫–∏");
      return;
    }

    if (!paymentMethod) {
      alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏");
      return;
    }

    if (!agreeToTerms) {
      alert(
        "–ù–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–æ–≥–æ–¥–∏—Ç–∏—Å—å –∑ —É–º–æ–≤–∞–º–∏ –æ—Ñ–µ—Ä—Ç–∏ —Ç–∞ –ø–æ–ª—ñ—Ç–∏–∫–æ—é –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ"
      );
      return;
    }

    // Here would be order submission logic
    console.log("Order submitted:", {
      contactData,
      deliveryMethod,
      deliveryCity,
      deliveryAddress,
      deliveryWarehouse,
      paymentMethod,
      items,
      totals,
    });

    alert("–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ! (—Ü–µ —Ç–µ—Å—Ç–æ–≤–∏–π —Ä–µ–∂–∏–º)");
  };

  const deliveryPrice =
    deliveryMethod === "pickup" ? 0 : "–∑–∞ —Ç–∞—Ä–∏—Ñ–∞–º–∏ –ø–µ—Ä–µ–≤—ñ–∑–Ω–∏–∫–∞";

  return (
    <div className="checkout">
      <div className="checkout__container">
        <h1 className="checkout__title">–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h1>

        <div className="checkout__layout">
          {/* Left side - Forms */}
          <div className="checkout__forms">
            {/* Contact Data Block */}
            <section className="checkout__section">
              <h2 className="checkout__section-title">–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ</h2>

              <div className="checkout__form-group">
                <label className="checkout__label">
                  <User size={18} />
                  –ü–Ü–ë
                </label>
                <input
                  type="text"
                  name="fullName"
                  value={contactData.fullName}
                  onChange={handleContactChange}
                  placeholder="–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –ü–Ü–ë"
                  className="checkout__input"
                  required
                />
              </div>

              <div className="checkout__form-row">
                <div className="checkout__form-group">
                  <label className="checkout__label">
                    <Phone size={18} />
                    –¢–µ–ª–µ—Ñ–æ–Ω
                  </label>
                  <input
                    type="tel"
                    name="phone"
                    value={contactData.phone}
                    onChange={handleContactChange}
                    placeholder="+380 XX XXX XX XX"
                    className="checkout__input"
                    required
                  />
                </div>

                <div className="checkout__form-group">
                  <label className="checkout__label">
                    <Mail size={18} />
                    Email
                  </label>
                  <input
                    type="email"
                    name="email"
                    value={contactData.email}
                    onChange={handleContactChange}
                    placeholder="example@mail.com"
                    className="checkout__input"
                    required
                  />
                </div>
              </div>

              <div className="checkout__form-group">
                <label className="checkout__label">
                  –ö–æ–º–µ–Ω—Ç–∞—Ä –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)
                </label>
                <textarea
                  name="comment"
                  value={contactData.comment}
                  onChange={handleContactChange}
                  placeholder="–î–æ–¥–∞–π—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä"
                  className="checkout__textarea"
                  rows="3"
                />
              </div>

              <div className="checkout__checkbox">
                <input
                  type="checkbox"
                  id="createAccount"
                  name="createAccount"
                  checked={contactData.createAccount}
                  onChange={handleContactChange}
                />
                <label htmlFor="createAccount">
                  –°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–∫–∞—É–Ω—Ç —Ç–∞ –∑–±–µ—Ä–µ–≥—Ç–∏ –¥–∞–Ω—ñ
                </label>
              </div>
            </section>

            {/* Delivery Block */}
            <section className="checkout__section">
              <h2 className="checkout__section-title">–î–æ—Å—Ç–∞–≤–∫–∞</h2>
              <p className="checkout__section-subtitle">
                –û–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –¥–æ—Å—Ç–∞–≤–∫–∏
              </p>

              <div className="checkout__delivery-grid">
                {deliveryOptions.map((option) => (
                  <div
                    key={option.id}
                    className={`checkout__delivery-card ${
                      deliveryMethod === option.id ? "active" : ""
                    }`}
                    onClick={() => setDeliveryMethod(option.id)}
                  >
                    <div className="checkout__delivery-icon">{option.icon}</div>
                    <div className="checkout__delivery-info">
                      <h3 className="checkout__delivery-name">{option.name}</h3>
                      <p className="checkout__delivery-subtitle">
                        {option.subtitle}
                      </p>
                    </div>
                    {deliveryMethod === option.id && (
                      <CheckCircle
                        size={20}
                        className="checkout__delivery-check"
                      />
                    )}
                  </div>
                ))}
              </div>

              {/* Delivery details based on selection */}
              {deliveryMethod && deliveryMethod !== "pickup" && (
                <div className="checkout__delivery-details">
                  <div className="checkout__form-group">
                    <label className="checkout__label">
                      <MapPin size={18} />
                      –ú—ñ—Å—Ç–æ
                    </label>
                    <div className="checkout__select-wrapper">
                      <select
                        value={deliveryCity}
                        onChange={(e) => setDeliveryCity(e.target.value)}
                        className="checkout__select"
                        required
                      >
                        <option value="">–û–±–µ—Ä—ñ—Ç—å –º—ñ—Å—Ç–æ</option>
                        <option value="kyiv">–ö–∏—ó–≤</option>
                        <option value="lviv">–õ—å–≤—ñ–≤</option>
                        <option value="odesa">–û–¥–µ—Å–∞</option>
                        <option value="kharkiv">–•–∞—Ä–∫—ñ–≤</option>
                        <option value="dnipro">–î–Ω—ñ–ø—Ä–æ</option>
                      </select>
                      <ChevronDown
                        size={20}
                        className="checkout__select-icon"
                      />
                    </div>
                  </div>

                  {deliveryMethod === "courier" ? (
                    <div className="checkout__form-group">
                      <label className="checkout__label">–ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏</label>
                      <input
                        type="text"
                        value={deliveryAddress}
                        onChange={(e) => setDeliveryAddress(e.target.value)}
                        placeholder="–í—É–ª–∏—Ü—è, –±—É–¥–∏–Ω–æ–∫, –∫–≤–∞—Ä—Ç–∏—Ä–∞"
                        className="checkout__input"
                        required
                      />
                    </div>
                  ) : (
                    <div className="checkout__form-group">
                      <label className="checkout__label">
                        –í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è / –ü–æ—à—Ç–æ–º–∞—Ç
                      </label>
                      <div className="checkout__select-wrapper">
                        <select
                          value={deliveryWarehouse}
                          onChange={(e) => setDeliveryWarehouse(e.target.value)}
                          className="checkout__select"
                          required
                        >
                          <option value="">–û–±–µ—Ä—ñ—Ç—å –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è</option>
                          <option value="1">–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ1</option>
                          <option value="2">–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ2</option>
                          <option value="3">–ü–æ—à—Ç–æ–º–∞—Ç ‚Ññ15</option>
                        </select>
                        <ChevronDown
                          size={20}
                          className="checkout__select-icon"
                        />
                      </div>
                    </div>
                  )}

                  <div className="checkout__checkbox">
                    <input
                      type="checkbox"
                      id="saveDelivery"
                      checked={saveDeliveryInfo}
                      onChange={(e) => setSaveDeliveryInfo(e.target.checked)}
                    />
                    <label htmlFor="saveDelivery">
                      –ó–∞–ø–∞–º'—è—Ç–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –¥–æ—Å—Ç–∞–≤–∫—É
                    </label>
                  </div>
                </div>
              )}

              {/* Pickup map placeholder */}
              {deliveryMethod === "pickup" && (
                <div className="checkout__pickup-map">
                  <MapPin size={24} />
                  <p>–ö–∞—Ä—Ç–∞ –∑ —Ç–æ—á–∫–∞–º–∏ —Å–∞–º–æ–≤–∏–≤–æ–∑—É</p>
                  <small>–≤—É–ª. –ü—Ä–∏–∫–ª–∞–¥–Ω–∞, 1, –ö–∏—ó–≤</small>
                </div>
              )}
            </section>

            {/* Payment Block */}
            <section className="checkout__section">
              <h2 className="checkout__section-title">–û–ø–ª–∞—Ç–∞</h2>
              <p className="checkout__section-subtitle">
                –û–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏
              </p>

              <div className="checkout__payment-grid">
                {paymentOptions.map((option) => (
                  <div
                    key={option.id}
                    className={`checkout__payment-card ${
                      paymentMethod === option.id ? "active" : ""
                    }`}
                    onClick={() => setPaymentMethod(option.id)}
                  >
                    <div className="checkout__payment-icon">{option.icon}</div>
                    <div className="checkout__payment-info">
                      <h3 className="checkout__payment-name">{option.name}</h3>
                      <p className="checkout__payment-subtitle">
                        {option.subtitle}
                      </p>
                    </div>
                    {paymentMethod === option.id && (
                      <CheckCircle
                        size={20}
                        className="checkout__payment-check"
                      />
                    )}
                  </div>
                ))}
              </div>

              <div className="checkout__checkbox">
                <input
                  type="checkbox"
                  id="agreeTerms"
                  checked={agreeToTerms}
                  onChange={(e) => setAgreeToTerms(e.target.checked)}
                  required
                />
                <label htmlFor="agreeTerms">
                  –ü–æ–≥–æ–¥–∂—É—é—Å—å –∑{" "}
                  <a href="/terms" className="checkout__link">
                    —É–º–æ–≤–∞–º–∏ –æ—Ñ–µ—Ä—Ç–∏
                  </a>{" "}
                  —Ç–∞{" "}
                  <a href="/privacy" className="checkout__link">
                    –ø–æ–ª—ñ—Ç–∏–∫–æ—é –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ
                  </a>
                </label>
              </div>
            </section>
          </div>

          {/* Right side - Order Summary (Sticky) */}
          <aside className="checkout__sidebar">
            <div className="checkout__summary">
              <h2 className="checkout__summary-title">–ü—ñ–¥—Å—É–º–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h2>

              <div className="checkout__items">
                {items.map((item, index) => (
                  <div key={index} className="checkout__item">
                    <img
                      src={item.image}
                      alt={item.title}
                      className="checkout__item-image"
                    />
                    <div className="checkout__item-info">
                      <h3 className="checkout__item-title">{item.title}</h3>
                      <p className="checkout__item-specs">
                        {item.size} ‚Ä¢ {item.firmness}
                      </p>
                      <p className="checkout__item-price">
                        {item.price} {currency} √ó {item.qty}
                      </p>
                    </div>
                  </div>
                ))}
              </div>

              <div className="checkout__totals">
                <div className="checkout__total-row">
                  <span>–¢–æ–≤–∞—Ä–∏:</span>
                  <span>
                    {totals.subtotal} {currency}
                  </span>
                </div>
                <div className="checkout__total-row">
                  <span>–ó–Ω–∏–∂–∫–∞:</span>
                  <span className="checkout__discount">
                    -{totals.discount} {currency}
                  </span>
                </div>
                <div className="checkout__total-row">
                  <span>–î–æ—Å—Ç–∞–≤–∫–∞:</span>
                  <span>
                    {typeof deliveryPrice === "number"
                      ? `${deliveryPrice} ${currency}`
                      : deliveryPrice}
                  </span>
                </div>
                <div className="checkout__total-row checkout__total-final">
                  <span>–†–∞–∑–æ–º:</span>
                  <span>
                    {totals.total} {currency}
                  </span>
                </div>
              </div>

              <button
                type="submit"
                onClick={handleSubmitOrder}
                className="checkout__submit-btn"
              >
                –û–ø–ª–∞—Ç–∏—Ç–∏ –∑–∞—Ä–∞–∑
              </button>

              <div className="checkout__help">
                <h3 className="checkout__help-title">
                  <HelpCircle size={20} />
                  –ü–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞?
                </h3>
                <p className="checkout__help-phone">+38 (XXX) XXX-XX-XX</p>
                <p className="checkout__help-time">
                  <Clock size={16} />
                  –ü–Ω-–ù–¥: 8:00-20:00
                </p>

                <div className="checkout__help-faq">
                  <p className="checkout__help-faq-text">
                    FAQ –∑ –¥–æ—Å—Ç–∞–≤–∫–∏ —Ç–∞ –æ–ø–ª–∞—Ç–∏
                  </p>
                </div>
              </div>
            </div>
          </aside>
        </div>
      </div>
    </div>
  );
};

export default Checkout;
